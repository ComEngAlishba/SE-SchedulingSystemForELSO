@layout LoginLayout
@page "/Cancel_Meeting_Page/{Teacher_Username}"
@inject NavigationManager navigationManager
@using Syncfusion.Blazor.DropDowns
@using Models
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Inputs
@inject IToastService toastService

<html lang="en">

<head>

    <link rel="shortcut icon" href="img/favicon.png">

    <title>Scheduling System ELSO| Arrange Time Slots</title>

    <!-- Bootstrap CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <!-- bootstrap theme -->
    <link href="css/bootstrap-theme.css" rel="stylesheet">
    <!--external css-->
    <!-- font icon -->
    <link href="css/elegant-icons-style.css" rel="stylesheet" />
    <link href="css/font-awesome.min.css" rel="stylesheet" />
    <!-- Custom styles -->
    <link href="css/style.css" rel="stylesheet">
    <link href="css/style-responsive.css" rel="stylesheet" />

</head>

<body>
    <!-- container section start -->
    <section id="container" class="">
        <!--header start-->
        <header class="header dark-heading-bg">
            <div class="toggle-nav">
                <div class="icon-reorder tooltips" data-original-title="Toggle Navigation" data-placement="bottom"><img src="icons/task.png"></div>
            </div>

            <!--logo start-->
            <a href="" class="logo"><b>Scheduling System <span class="lite">ELSO</span></b></a>
            <!--logo end-->

            <div class="top-nav notification-row">
                <!-- notificatoin dropdown start-->
                <ul class="nav pull-right top-menu">

                    <!-- user login dropdown start-->
                    <li class="dropdown">
                        <a data-toggle="dropdown" href="#">
                            <span class="profile-ava">
                                <img alt="" src="icons/user.png"><!--profile pic from the -database if any otherwise set any defaul -->
                            </span>
                            <span class="username">@Teacher_Username</span>
                            <b class="caret"></b>
                        </a>
                        <ul class="dropdown-menu extended logout">
                            <div class="log-arrow-up"></div>
                            <li class="eborder-top">
                                <a href="/My_Profile_Teacher_Page/@Teacher_Username"><i class="icon_profile"></i> My Profile</a>
                            </li>
                            <li>
                                <a href="/"><i class="icon_key_alt"></i> Log Out</a><!--navigate to login page-->
                            </li>
                        </ul>
                    </li>
                    <!-- user login dropdown end -->
                </ul>
                <!-- notificatoin dropdown end-->
            </div>
        </header>
        <!--header end-->
        <!--sidebar start-->
        <aside>
            <div id="sidebar" class="nav-collapse">
                <!-- sidebar menu start-->
                <ul class="sidebar-menu">
                    <li>
                        <a class="" href="/Teacher_Home_Page/@Teacher_Username">
                            <!--navigate to Home page-->
                            <i class="icon_house_alt"></i>
                            <span>Home Page</span>
                        </a>
                    </li>
                    <li>
                        <a class="" href="/Arrange_Time_Slots_Page/@Teacher_Username">
                            <i class="icon_piechart"></i>
                            <span>Create Meeting</span>

                        </a>

                    </li>
                    <li>
                        <a class="" href="/Send_Annoucment_Page/@Teacher_Username">
                            <!--navigate to inbox  -->
                            <i class="icon_piechart"></i>
                            <span>Send Annoucments</span>

                        </a>

                    </li>
                    <li>
                        <a class="" href="/Received_Meeting_Requests/@Teacher_Username">
                            <i class="icon_piechart"></i>
                            <span>Meeting Requests</span>

                        </a>

                    </li>
                    <li>
                        <a class="" href="/My_Meeting_Teacher_Page/@Teacher_Username">
                            <i class="icon_piechart"></i>
                            <span>My Meetings</span>
                        </a>
                    </li>
                    <li>
                        <a class="" href="/Reschedule_Meetings_Page/@Teacher_Username">
                            <i class="icon_piechart"></i>
                            <span>Reschedule Meetings</span>
                        </a>
                    </li>
                    <li class="active">
                        <a class="" href="/Cancel_Meeting_Page/@Teacher_Username">
                            <i class="icon_piechart"></i>
                            <span>Cancel Meetings</span>
                        </a>
                    </li>
                    <li class="">
                        <a class="" href="/Notification_Page/@Teacher_Username">
                            <i><img src="icons/bell.png"></i>
                            <span>Notification</span>
                            <span class="badge bg-important">@notification_numbers</span><!--total number of notifications-->
                        </a>
                    </li>
                </ul>
                <!-- sidebar menu end-->
            </div>
        </aside>
        <!--sidebar end-->
        <!--main content start-->
        <section id="main-content">

            <div>
                <img src="../icons/im.jpg" style="margin-top:100px; right:50%;top:50%; width:350px; height:430px; position:absolute" />
            </div>

            <div class="loginBox">

                <h2>Cancel Meeting</h2>
                <form>
                    <div class="wrap-input100">
                        <SfDropDownList TValue="int" TItem="TimeSlotsTable" @onclick="() => Show_Meeting_Info()" @bind-Value="@Meeting_Id" Placeholder="Select a meeting" DataSource="@meetings" Width="120">
                            <DropDownListFieldSettings Value="Id" Text="MeetingTopic"></DropDownListFieldSettings>
                        </SfDropDownList>
                        <button type="button" class="btn btn-success mt-1" @onclick="() => Show_Meeting_Info()">Show</button>
                    </div>
                    <p>Start Time:</p>
                    <div>
                        <SfDateTimePicker TValue="DateTime" Readonly="true" @bind-Value="@new_time_slot.StartTime" @onselectionchange="StateHasChanged" @onclick="() => StateHasChanged()" Placeholder='Select a date and time'>
                        </SfDateTimePicker>
                    </div>
                    <p> End Time:</p>
                    <div>
                        <SfDateTimePicker TValue="DateTime" Readonly="true" @bind-Value="@new_time_slot.EndTime" @onselectionchange="StateHasChanged" @onclick="() => StateHasChanged()" Placeholder='Select a date and time'>
                        </SfDateTimePicker>
                    </div>
                    <p>Meeting Topic:</p>
                    <div>
                       <SfTextBox TValue="string" Readonly="true" @bind-Value="@new_time_slot.MeetingTopic" Placeholder='Write a Topic'></SfTextBox>
                    </div>
                    <p>Reason for Cancelling Meeting</p>
                    <div>
                        <textarea class="input100" style="width:277px" TValue="string" @bind="@Reason" Placeholder='Write a Reason'></textarea>
                    </div>
                    <div>
                        <button type="button" class="btn btn-success mt-1" @onclick="() => Cancel_Meeting()">Send Request</button>
                    </div>


                </form>
            </div>
           
        </section>
        <!--main content end-->
    </section>
    <!-- container section end -->
</body>


</html>
@code {
    [Parameter]
    public string Teacher_Username { get; set; }
    public int notification_numbers { get; set; }

    public string Reason { get; set; }
    List<TimeSlotsTable> meetings;
    TimeSlotsTable new_time_slot = new TimeSlotsTable();
    public int Meeting_Id { get; set; }
    protected override async Task OnInitializedAsync()
    {
        SchedulingSystemForELSOContext db = new SchedulingSystemForELSOContext();
        meetings = db.TimeSlotsTable.Where(t => t.TeacherUsername == Teacher_Username && t.Request == true).ToList();
        notification_numbers = db.NotificationTable.Where(t => t.Username == Teacher_Username).ToList().Count;
    }
    protected async Task Show_Meeting_Info()
    {
        SchedulingSystemForELSOContext db = new SchedulingSystemForELSOContext();
        new_time_slot = db.TimeSlotsTable.Where(t => t.Id == Meeting_Id && t.Request == true).FirstOrDefault();
    }
    protected async Task Cancel_Meeting()
    {
        try
        {
            SchedulingSystemForELSOContext db = new SchedulingSystemForELSOContext();
            RescheduleDeleteTable meeting = new RescheduleDeleteTable();
            NotificationTable n = new NotificationTable();
            n.Username = "Admin";
            n.NotiMessage = "You have a  Request for Cancelling a Meeting " + meeting.MeetingTopic + " from teacher : " + Teacher_Username + " .";
            db.NotificationTable.Add(n);
            meeting.MeetingId = Meeting_Id;
            meeting.TeacherUsername = Teacher_Username;
            meeting.StartTime = new_time_slot.StartTime;
            meeting.EndTime = new_time_slot.EndTime;
            meeting.MeetingTopic = new_time_slot.MeetingTopic;
            meeting.RescheduleDeleteChoice = "Delete";
            meeting.Reason = Reason;
            db.RescheduleDeleteTable.Add(meeting);
            db.SaveChanges();
            toastService.ShowSuccess("Your Request has been Sent Successfully");
            navigationManager.NavigateTo("/Teacher_Home_Page/" + Teacher_Username);
        }
        catch (Exception ex)
        {
            toastService.ShowError(ex.Message);
        }
    }


}

